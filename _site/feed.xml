<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>techwritex.github.io</title>
        <description></description>
        <link>http://localhost:4000/</link>
        <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Mon, 12 Jul 2021 10:38:12 +0300</pubDate>
        <lastBuildDate>Mon, 12 Jul 2021 10:38:12 +0300</lastBuildDate>
        <generator>Jekyll v3.9.0</generator>
        
        <item>
            <title>Место или действие?</title>
            <description>&lt;p&gt;Какой способ описания пошагового действия применять при оформлении руководств и/или инструкций - начинать с выполняемого действия или области интерфейса (места), где это действие выполняется?&lt;/p&gt;

&lt;p&gt;Приведу свои мысли по этому поводу.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;ophormlenie-technicheskoy-documentactyi-tupo.html&quot;&gt;Руководства к оформлению технической документации ИТ-индустрии&lt;/a&gt; излагают, что описание действия является более важным. Следовательно, начинать необходимо именно с действия.&lt;/p&gt;

&lt;p&gt;Например,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Нажмите “Кластеры” в левой навигационной панели, затем “Создать кластеры”…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Здесь есть несколько важных нюансов:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Нюанс первый.&lt;/p&gt;

    &lt;p&gt;Как заметил &lt;a href=&quot;ophormlenie-technicheskoy-documentactyi-tupo.html&quot;&gt;в одной из предыдущих заметок&lt;/a&gt;, подходы из указанных руководств разрабатывались в основном для англоязычных пользователей.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Нюанс второй.&lt;/p&gt;

    &lt;p&gt;Многие европейские и американские компании вкладываются в психологические исследования своих текущих и потенциальных потребителей. И с большой долей вероятности, используют результаты иссследований в разработке документации (возможно, с использованием различных A/B-тестирований). Только вот основная часть пользователей - это всё-таки люди с “западным” менталитетом.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Учитывая приведённые выше нюансы, обозначу свою основную мысль.&lt;/p&gt;

&lt;p&gt;Применять подходы и лучшие практики необходимо “с головой”. Нельзя просто копировать подход для “неанглоязычной” аудитории. Это как с кнопкой “купить сейчас” (здесь же “заказать сейчас”, “скачать сейчас” и т.д.). Подобные призывы к действию отлично работают “там”. Но у нас практически не работает. Попробуйте “славянскую душу” (кстати, я бы отнёс сюда всех граждан постсоветского пространства) заставить сделать что-то прямо сейчас (да-да, “Держи карман шире!”). Возникнет только обратная реакция. Если продукт ориентирован на международный рынок, то здесь вопросов нет.&lt;/p&gt;

&lt;p&gt;Поэтому приведенный выше пример я бы немного переделал. Сначала сориентировал бы пользователя в пространстве (указал бы место, куда смотреть), а затем обозначил бы необходимое действие. Вот как-то так:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;В левой навигационной панели нажмите “Кластеры”, затем “Создать кластеры”…&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;Вроде бы мелочь, но именно трепетное отношение к таким мелочам позволяет создать качественный продукт, в том числе, и техническую документацию.&lt;/p&gt;

</description>
            <pubDate>Sun, 11 Jul 2021 00:00:00 +0300</pubDate>
            <link>http://localhost:4000/mesto-ili-deistvie.html</link>
            <guid isPermaLink="true">http://localhost:4000/mesto-ili-deistvie.html</guid>
            
            
        </item>
        
        <item>
            <title>Документация как код</title>
            <description>&lt;p&gt;“Документация как код” (“docs as code” или “docs like code”) - подход в создании и поддержке технической документации с использованием систем, инструментов, процессов, которые применяются в разработке программного кода.&lt;/p&gt;

&lt;h3 id=&quot;признаки-подхода-документация-как-код&quot;&gt;Признаки подхода “документация как код”:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Ведение документации в текстовых данных.&lt;/li&gt;
  &lt;li&gt;Использование интегрированной среды разработки (IDE) для работы с текстами.&lt;/li&gt;
  &lt;li&gt;Использование системы контроля версий.&lt;/li&gt;
  &lt;li&gt;Использование статических генераторов сайтов.&lt;/li&gt;
  &lt;li&gt;Выполнение автоматического тестирования документации.&lt;/li&gt;
  &lt;li&gt;Применение методологии разработки ПО.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;ведение-документации-в-текстовых-данных&quot;&gt;Ведение документации в текстовых данных&lt;/h3&gt;

&lt;p&gt;Текстовые данные (тектовые форматы или plain text) - это текст, к которому не применено форматирование (например, различные шрифты, их размеры, цвет, жирность, курсив и т.д.). Этот тип текста прост в использовании, легко читается. Поэтому часто применяется многимим программистами и разработчиками в их работе. Примерами здесь могут служить широко распространённые облегчённые языки разметки - Markdown, reStructuredText, Textile, Fountain и др.&lt;/p&gt;

&lt;h3 id=&quot;использование-интегрированной-среды-разработки-ide-для-работы-с-текстами&quot;&gt;Использование интегрированной среды разработки (IDE) для работы с текстами&lt;/h3&gt;

&lt;p&gt;Как правило, в качестве редактора выступает IDE, которая используется смежной командой разработчиков. Например, Atom, Sublime Text, Visual Studio Code и другие (в основном бесплатные).&lt;/p&gt;

&lt;h3 id=&quot;использование-системы-контроля-версий&quot;&gt;Использование системы контроля версий&lt;/h3&gt;

&lt;p&gt;Хранение документации организовано с помощью систем контроля версий, которая также используется для хранения программного кода проекта. Наиболее часто это реализуется с помощью Git репозитариев.&lt;/p&gt;

&lt;h3 id=&quot;использование-статических-генераторов-сайтов&quot;&gt;Использование статических генераторов сайтов&lt;/h3&gt;

&lt;p&gt;Вместо систем управления содержимым (CMS) для публикации документации применяются генераторы статических сайтов. Например, Jekyll, Sphinx и т.д.&lt;/p&gt;

&lt;h3 id=&quot;выполнение-автоматического-тестирования-документации&quot;&gt;Выполнение автоматического тестирования документации&lt;/h3&gt;

&lt;p&gt;Ручная проверка документации заменяется на автоматическую в виде скрипта, который проверяет сломанные ссылки, ошибки стилей и т.д.&lt;/p&gt;

&lt;h3 id=&quot;применение-методологии-разработки-по&quot;&gt;Применение методологии разработки ПО&lt;/h3&gt;

&lt;p&gt;Применение методологии разработки ПО (например, agile), а также инструментов управления командой разработчиков (например, Jira) в рабочих процессах написания технической документации.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Если обозначенные выше признаки включены в процесс разработки технической документации, то с большой долей вероятности можно сказать, что применяется подход “документация как код” или “docs as code”.&lt;/p&gt;

</description>
            <pubDate>Tue, 06 Jul 2021 00:00:00 +0300</pubDate>
            <link>http://localhost:4000/dokumentatciya-kak-kod.html</link>
            <guid isPermaLink="true">http://localhost:4000/dokumentatciya-kak-kod.html</guid>
            
            
        </item>
        
        <item>
            <title>Формула ТУПО в оформлении технической документации</title>
            <description>&lt;p&gt;Подходы к оформлению технической документации подробно изложены в соответсвующих руководствах/документах лидеров ИТ-индустрии. Изобретать велосипед здесь излишне. Настоятельно рекомендую ознакомиться с этими документами (в конце заметки перечислены некоторые из них). 
Здесь же привожу основные моменты оформления (или, как я называю их, “формула ТУПО”), которых придерживаюсь в подготовке документации.&lt;/p&gt;

&lt;h2 id=&quot;принципы-оформления-формула-тупо&quot;&gt;Принципы оформления (формула ТУПО):&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Точность.&lt;/li&gt;
  &lt;li&gt;Удобочитаемость.&lt;/li&gt;
  &lt;li&gt;Последовательность.&lt;/li&gt;
  &lt;li&gt;Ориентация на конкретную аудиторию.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Теперь рассмотрим каждый из пунктов подробнее.&lt;/p&gt;

&lt;h2 id=&quot;точность&quot;&gt;Точность&lt;/h2&gt;

&lt;p&gt;Техническая документация - это не художественное произведение. Никакой “воды” и лишних слов. Должна быть представлена только суть. Только тот материал, который помогает решить конкретную задачу, стоящую перед пользователем (в широком смысле пользователем, здесь же администратор, разработчик и т.д.).&lt;/p&gt;

&lt;p&gt;Хотя бывают комические ситуции. Случай из практики.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;После окончания работы над одним из документов пакета проектной документации данный документ был передан руководителю ИТ-проекта. Полистав и покрутив в руках готовый документ, руководитель выдал следующее: “Я понимаю, что здесь всё только самое важное и вы подошли с полным понимаем к его подготовке, погрузившись во все детали. Но боюсь, что заказчик, заплатив N-ю сумму, не совсем корректно сопоставит затраты на документ и его объём. В общем, добавьте ещё страниц…”. Обоснование объёма подготовленного документа не растопило сердце проектного менеджера. Прошлось “дорабатывать”. И душа понеслась в рай… Через несколько дней “доработанный” документ был предоставлен руководителю повторно и… чудо случилось. “Ну, вот! Другое дело. Нарядно и страниц много. Спасибо!”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Думаю, всё здесь понятно.&lt;/p&gt;

&lt;p&gt;Техническая документация - это “точное произведение”. Но если заказчик очень просит, можно пойти на встречу. Хотя, это скорее исключение из правил.&lt;/p&gt;

&lt;h2 id=&quot;удобочитаемость&quot;&gt;Удобочитаемость&lt;/h2&gt;

&lt;p&gt;Под удобочитаемостью или читабельностью понимается свойство текста, позволяющее оценить лёгкость восприятия человеком этого текста.&lt;/p&gt;

&lt;p&gt;При этом удобочитаемость бывает двух видов:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;полиграфическая,&lt;/li&gt;
  &lt;li&gt;лингвистическая.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;К полиграфической удобочитаемости относится внешнее оформление текста и лёгкость его визуального восприятия. Как правило, учитываются следующие параметры:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;шрифты и их размеры,&lt;/li&gt;
  &lt;li&gt;цвет и контрастность текста,&lt;/li&gt;
  &lt;li&gt;выравнивание текста,&lt;/li&gt;
  &lt;li&gt;длина строки,&lt;/li&gt;
  &lt;li&gt;ширина полей страницы и т.д.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Лингвистическая удобочитаемость связана с построением конструкций предложений, их длиной, а также сложностью используемых слов (в том числе терминов и профессионального жаргона). Здесь всё зависит от целевой аудитории. Необходимо полностью осознавать для кого готовится документация. Исходя из этого, учитывать все нюансы лингвистической удобочитаемости.&lt;/p&gt;

&lt;h2 id=&quot;последовательность&quot;&gt;Последовательность&lt;/h2&gt;

&lt;p&gt;Материал в технической документации должен подаваться последовательно от общего к частному. Сначала даётся общая информация, позволяющая пользователю оценить документацию “с высоты птичьего полёта” и понять, что его ождидет. Затем выполняется переход к частному (детальному). Например, сначала общее описание процесса разработки хранилища данных, затем подробное описание каждого шага этого процесса (разработка ролей, подготовка данных и т.д.).&lt;/p&gt;

&lt;h2 id=&quot;ориентация-на-конкретную-аудиторию&quot;&gt;Ориентация на конкретную аудиторию&lt;/h2&gt;

&lt;p&gt;Уверен, что из названия пункта всё понятно. Как ранее было уже упомянуто, необходимо знать целевую аудиторию, для которой готовится техническая документация.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Несколько примеров с описанием правил оформления технической документации:&lt;/p&gt;

&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;&lt;i class=&quot;fa fa-warning&quot;&gt;&lt;/i&gt; &lt;b&gt;Важно:&lt;/b&gt;  применять, перечисленные ниже документы разработаны с учетом английского языка и многие моменты неприменимы к нормам русского языка.&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.apple.com/applestyleguide/&quot;&gt;Apple Style Guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.google.com/style&quot;&gt;Google developer documentation style guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stylepedia.net/&quot;&gt;Red Hat technical documentation style guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
            <pubDate>Thu, 01 Jul 2021 00:00:00 +0300</pubDate>
            <link>http://localhost:4000/ophormlenie-technicheskoy-documentactyi-tupo.html</link>
            <guid isPermaLink="true">http://localhost:4000/ophormlenie-technicheskoy-documentactyi-tupo.html</guid>
            
            
        </item>
        
    </channel>
</rss>
